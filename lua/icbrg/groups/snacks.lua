local M = {}

function M.highlight(palette, opts)
  return {
    SnacksPicker = {
      fg = palette.fg,
      bg = opts.transparent and palette.none or palette.bg,
    },
    SnacksPickerBorder = {
      fg = palette.light_gray,
      bg = opts.transparent and palette.none or palette.bg,
    },
    SnacksPickerTitle = { fg = palette.blue, bold = true },
    SnacksPickerPrompt = { fg = palette.cyan },
    SnacksPickerInput = { fg = palette.fg, bg = palette.alt_bg },
    SnacksPickerList = { fg = palette.fg },
    SnacksPickerListCursorLine = { bg = palette.accent },
    SnacksPickerPreview = { fg = palette.fg },
    SnacksPickerPreviewTitle = { fg = palette.blue, bold = true },
    SnacksPickerPreviewCursorLine = { bg = palette.alt_bg },
    SnacksPickerBoxTitle = { fg = palette.blue, bold = true },
    SnacksPickerDir = { fg = palette.blue },
    SnacksPickerFile = { fg = palette.fg },
    SnacksPickerPath = { fg = palette.medium_gray }, -- This should be readable, not too dark
    SnacksPickerMatch = { fg = palette.orange, bold = true },
    SnacksPickerSelected = { fg = palette.green, bold = true },
    SnacksPickerUnselected = { fg = palette.medium_gray },
    SnacksPickerTotals = { fg = palette.medium_gray },
    SnacksPickerCursorLine = { bg = palette.accent },
    SnacksPickerFooter = { fg = palette.medium_gray },
    SnacksPickerHeader = { fg = palette.medium_gray },
    SnacksPickerSearch = { fg = palette.yellow },
    SnacksPickerToggle = { fg = palette.cyan },
    SnacksPickerIconFile = { fg = palette.fg },
    SnacksPickerIconDir = { fg = palette.blue },
    SnacksPickerIconSymlink = { fg = palette.cyan },
    SnacksPickerGitStatusAdded = { fg = palette.green },
    SnacksPickerGitStatusModified = { fg = palette.yellow },
    SnacksPickerGitStatusDeleted = { fg = palette.red },
    SnacksPickerGitStatusUntracked = { fg = palette.medium_gray },
    SnacksPickerGitStatusIgnored = { fg = palette.gray },
    SnacksPickerGitStatusStaged = { fg = palette.green, bold = true },
    SnacksPickerBufFlags = { fg = palette.medium_gray },
    SnacksPickerBufNr = { fg = palette.medium_gray },
    SnacksPickerBufModified = { fg = palette.yellow },
    SnacksPickerBufReadonly = { fg = palette.red },
    SnacksPickerDiagnosticError = { fg = palette.error },
    SnacksPickerDiagnosticWarn = { fg = palette.warning },
    SnacksPickerDiagnosticInfo = { fg = palette.info },
    SnacksPickerDiagnosticHint = { fg = palette.hint },
    SnacksPickerCol = { fg = palette.medium_gray },
    SnacksPickerRow = { fg = palette.medium_gray },
    SnacksPickerLine = { fg = palette.fg },
    SnacksPickerTreesitter = { fg = palette.green },
    SnacksPickerLsp = { fg = palette.blue },
    SnacksPickerComment = { fg = palette.medium_gray },
    SnacksPickerString = { fg = palette.green },
    SnacksPickerNumber = { fg = palette.red },
    SnacksPickerBoolean = { fg = palette.red },
    SnacksPickerKeyword = { fg = palette.blue },
    SnacksPickerFunction = { fg = palette.cyan },
    SnacksPickerVariable = { fg = palette.fg },
    SnacksPickerType = { fg = palette.yellow },
    SnacksPickerOperator = { fg = palette.white },
    SnacksPickerDelimiter = { fg = palette.white },
    SnacksPickerSpecial = { fg = palette.purple },
    SnacksPickerTag = { fg = palette.blue },
    SnacksPickerAttribute = { fg = palette.cyan },
    SnacksPickerNamespace = { fg = palette.blue },
    SnacksPickerModule = { fg = palette.blue },
    SnacksPickerClass = { fg = palette.yellow },
    SnacksPickerStruct = { fg = palette.yellow },
    SnacksPickerInterface = { fg = palette.yellow },
    SnacksPickerEnum = { fg = palette.yellow },
    SnacksPickerEnumMember = { fg = palette.fg },
    SnacksPickerConstant = { fg = palette.red },
    SnacksPickerField = { fg = palette.fg },
    SnacksPickerProperty = { fg = palette.fg },
    SnacksPickerMethod = { fg = palette.cyan },
    SnacksPickerConstructor = { fg = palette.yellow },
    SnacksPickerParameter = { fg = palette.fg },
    SnacksPickerLabel = { fg = palette.fg },
    SnacksPickerMacro = { fg = palette.red },
    SnacksPickerException = { fg = palette.red },
    SnacksPickerStatement = { fg = palette.blue },
    SnacksPickerConditional = { fg = palette.blue },
    SnacksPickerRepeat = { fg = palette.blue },
    SnacksPickerInclude = { fg = palette.red },
    SnacksPickerPreProc = { fg = palette.red },
    SnacksPickerDefine = { fg = palette.red },
    SnacksPickerPreCondit = { fg = palette.red },
    SnacksPickerTodo = { fg = palette.red, bold = true },
    SnacksPickerNote = { fg = palette.info, bold = true },
    SnacksPickerWarning = { fg = palette.warning, bold = true },
    SnacksPickerError = { fg = palette.error, bold = true },
    SnacksPickerInfo = { fg = palette.info },
    SnacksPickerHint = { fg = palette.hint },
    SnacksPickerDebug = { fg = palette.red },
    SnacksPickerTrace = { fg = palette.purple },
    SnacksPickerDeprecated = { fg = palette.medium_gray, strikethrough = true },
    SnacksPickerUnnecessary = { fg = palette.medium_gray },
    SnacksPickerMissing = { fg = palette.red },
    SnacksPickerAdded = { fg = palette.green },
    SnacksPickerRemoved = { fg = palette.red },
    SnacksPickerChanged = { fg = palette.yellow },
    SnacksPickerDiffAdd = { fg = palette.green },
    SnacksPickerDiffDelete = { fg = palette.red },
    SnacksPickerDiffChange = { fg = palette.yellow },
    SnacksPickerDiffText = { fg = palette.blue },
    SnacksPickerDiffLine = { fg = palette.medium_gray },
    SnacksPickerDiffFile = { fg = palette.fg },
    SnacksPickerDiffNewFile = { fg = palette.green },
    SnacksPickerDiffOldFile = { fg = palette.red },
    SnacksPickerDiffIndexLine = { fg = palette.blue },
    SnacksPickerDiffHunkHeader = { fg = palette.blue },
    SnacksPickerDiffHunk = { fg = palette.medium_gray },
    SnacksPickerStatusLine = { fg = palette.fg, bg = palette.alt_bg },
    SnacksPickerStatusLineNC = { fg = palette.medium_gray, bg = palette.alt_bg },
    SnacksPickerWinBar = { fg = palette.fg, bg = palette.alt_bg },
    SnacksPickerWinBarNC = { fg = palette.medium_gray, bg = palette.alt_bg },
    SnacksPickerMenu = { fg = palette.fg, bg = palette.alt_bg },
    SnacksPickerMenuSel = { fg = palette.blue, bg = palette.accent },
    SnacksPickerMenuBorder = { fg = palette.light_gray, bg = palette.alt_bg },
    SnacksPickerNormal = { fg = palette.fg, bg = palette.bg },
    SnacksPickerNormalNC = { fg = palette.medium_gray, bg = palette.bg },
    SnacksPickerCursor = { fg = palette.cursor_fg, bg = palette.cursor_bg },
    SnacksPickerCursorLine = { bg = palette.alt_bg },
    SnacksPickerCursorColumn = { bg = palette.alt_bg },
    SnacksPickerColorColumn = { bg = palette.alt_bg },
    SnacksPickerLineNr = { fg = palette.medium_gray },
    SnacksPickerCursorLineNr = { fg = palette.light_gray, bold = true },
    SnacksPickerSignColumn = { bg = palette.bg },
    SnacksPickerFoldColumn = { fg = palette.light_gray, bg = palette.bg },
    SnacksPickerFolded = { fg = palette.light_gray, bg = palette.alt_bg },
    SnacksPickerMatchParen = { fg = palette.blue, bg = palette.bg, underline = true },
    SnacksPickerVisual = { bg = palette.gray },
    SnacksPickerVisualNOS = { bg = palette.alt_bg },
    SnacksPickerSearch = { fg = palette.orange, bg = palette.alt_bg },
    SnacksPickerIncSearch = { fg = palette.alt_bg, bg = palette.sign_delete },
    SnacksPickerSubstitute = { fg = palette.alt_bg, bg = palette.orange },
    SnacksPickerModeMsg = { fg = palette.fg, bg = palette.bg },
    SnacksPickerMsgArea = { fg = palette.fg, bg = palette.bg },
    SnacksPickerMsgSeparator = { fg = palette.fg, bg = palette.bg },
    SnacksPickerMoreMsg = { fg = palette.cyan },
    SnacksPickerQuestion = { fg = palette.cyan },
    SnacksPickerErrorMsg = { fg = palette.error, bg = palette.bg, bold = true },
    SnacksPickerWarningMsg = { fg = palette.error, bg = palette.bg },
    SnacksPickerEndOfBuffer = { fg = palette.bg },
    SnacksPickerNonText = { fg = palette.bg },
    SnacksPickerSpecialKey = { fg = palette.blue },
    SnacksPickerWhitespace = { fg = palette.gray },
    SnacksPickerTabLine = { fg = palette.gray, bg = palette.alt_bg },
    SnacksPickerTabLineSel = { fg = palette.white, bg = palette.alt_bg },
    SnacksPickerTabLineFill = { fg = palette.white, bg = palette.alt_bg },
    SnacksPickerVertSplit = { fg = palette.bg, bg = palette.accent },
    SnacksPickerWinSeparator = { fg = palette.medium_gray, bg = palette.bg },
    SnacksPickerFloatBorder = { fg = palette.light_gray },
    SnacksPickerNormalFloat = { bg = palette.alt_bg },
    SnacksPickerPmenu = { fg = palette.light_gray, bg = palette.accent },
    SnacksPickerPmenuSel = { fg = palette.blue, bg = palette.alt_bg },
    SnacksPickerPmenuSbar = { bg = palette.alt_bg },
    SnacksPickerPmenuThumb = { bg = palette.light_gray },
    SnacksPickerQuickFixLine = { bg = palette.accent },
    SnacksPickerSpellBad = { sp = palette.error, undercurl = true },
    SnacksPickerSpellCap = { sp = palette.yellow, undercurl = true },
    SnacksPickerSpellLocal = { sp = palette.sign_add, undercurl = true },
    SnacksPickerSpellRare = { sp = palette.purple, undercurl = true },
    SnacksPickerConceal = { fg = palette.medium_gray },
    SnacksPickerDirectory = { fg = palette.blue },
    SnacksPickerTitle = { fg = palette.blue },
    SnacksPickerBold = { bold = true },
    SnacksPickerItalic = { italic = true },
    SnacksPickerUnderline = { underline = true },
    SnacksPickerUndercurl = { undercurl = true },
    SnacksPickerStrikethrough = { strikethrough = true },
    SnacksPickerReverse = { reverse = true },
    SnacksPickerStandout = { standout = true },
    SnacksPickerNoCombine = { nocombine = true },
  }
end

return M